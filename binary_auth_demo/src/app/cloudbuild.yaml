steps:

- name: 'gcr.io/cloud-builders/docker'
  id: Build
  args:
  - 'build'
  - '-t'
  - 'gcr.io/$PROJECT_ID/hello-app:$SHORT_SHA'
  - '.'

- name: 'gcr.io/cloud-builders/docker'
  id: Push Image to GCR
  args:
  - 'push'
  - 'gcr.io/$PROJECT_ID/hello-app:$SHORT_SHA'

- name: gcr.io/$PROJECT_ID/cloudbuild-attestor
  id: Check Vulnerability Scan Results
  entrypoint: 'sh'
  args:
  - -xe
  - -c
  - |
     /scripts/check_vulnerabilities.sh -p $PROJECT_ID -i gcr.io/$PROJECT_ID/hello-app:$SHORT_SHA -t 5

- name: 'gcr.io/$PROJECT_ID/cloudbuild-attestor'
  id: 'Attest'
  entrypoint: 'sh'
  args:
  - -xe
  - -c
  - |
     FULLY_QUALIFIED_IMAGE=$(gcloud container images describe --format 'value(image_summary.fully_qualified_digest)' gcr.io/$PROJECT_ID/hello-app:$SHORT_SHA)
     /scripts/create_attestation.sh -n NOTE_ID -p $PROJECT_ID -i $$FULLY_QUALIFIED_IMAGE -b BUCKET_NAME -r KMS_KEYRING  -k KMS_KEY 

- name: 'gcr.io/cloud-builders/gcloud'
  id: Generate k8s manifest
  entrypoint: /bin/sh
  args:
  - '-c'
  - |
     DIGEST=$(gcloud container images describe --format 'value(image_summary.digest)' gcr.io/$PROJECT_ID/hello-app:$SHORT_SHA)
     sed "s/GOOGLE_CLOUD_PROJECT/${PROJECT_ID}/g" kubernetes.yaml.tpl | \
     sed "s/DIGEST/$${DIGEST}/g" > kubernetes.yaml

- name: 'gcr.io/cloud-builders/kubectl'
  id: Deploy to GKE
  args:
  - 'apply'
  - '-f'
  - 'kubernetes.yaml'
  env:
  - 'CLOUDSDK_COMPUTE_ZONE=ZONE'
  - 'CLOUDSDK_CONTAINER_CLUSTER=CLUSTER_NAME'