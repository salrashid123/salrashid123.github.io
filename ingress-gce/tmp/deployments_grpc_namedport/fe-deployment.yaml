apiVersion: apps/v1
kind: Deployment
metadata:
  name: fe-deployment
  labels:
    app: fe
spec:
  replicas: 2
  selector:
    matchLabels:
      app: fe
  template:
    metadata:
      labels:
        app: fe
    spec:
      containers:
      - name: fe-hc
        image: salrashid123/grpc_health_proxy
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
          protocol: TCP
          name: hc-port
        livenessProbe:
          httpGet:
            path: "/_ah/health"
            port: hc-port
            scheme: HTTP
        readinessProbe:
          httpGet:
            path: "/_ah/health"
            scheme: HTTP
            port: hc-port
        # for scheme: HTTPS
        #args: ["--http-listen-addr", ":8080", "--http-listen-path", "/_ah/health", "--https-listen-cert=/data/certs/http_server_crt.pem","--https-listen-key=/data/certs/http_server_key.pem", "--grpcaddr", "localhost:50051", "--grpctls", "--grpc-ca-cert=/data/certs/CA_crt.pem", "--grpc-sni-server-name=grpc.domain.com", "--service-name", "echo.EchoServer", "--logtostderr=1", "-v=10"]
        # for scheme: HTTP
        args: ["--http-listen-addr", ":8080", "--http-listen-path", "/_ah/health", "--grpcaddr", "localhost:50051", "--grpctls", "--grpc-ca-cert=/data/certs/CA_crt.pem", "--grpc-sni-server-name=grpc.domain.com", "--service-name", "echo.EchoServer", "--logtostderr=1", "-v=10"]
        volumeMounts:
        - name: certs-volume
          mountPath: /data/certs
      - name: fe-grpc
        image: salrashid123/grpc_only_backend
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 50051
          protocol: TCP
        command: ["/grpc_server"]
        args: ["--grpcport", ":50051"]
      volumes:
        - name: certs-volume
          secret:
            secretName: fe-ca-cert
