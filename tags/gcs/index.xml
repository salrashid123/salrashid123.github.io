<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>gcs on blog.salrashid.me</title>
    <link>https://blog.salrashid.me/tags/gcs/</link>
    <description>Recent content in gcs on blog.salrashid.me</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 06 Jan 2020 14:34:01 -0800</lastBuildDate>
    
	<atom:link href="https://blog.salrashid.me/tags/gcs/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Google Cloud KMS based Service Accounts for Authentication and SignedURLs</title>
      <link>https://blog.salrashid.me/posts/kms_service_accounts/</link>
      <pubDate>Mon, 06 Jan 2020 14:34:01 -0800</pubDate>
      
      <guid>https://blog.salrashid.me/posts/kms_service_accounts/</guid>
      <description>The following procedure details how to embed a Google Cloud KMS key as a Service Account.
There are two ways to associate a Service Account with a KMS key:
 Create a private key within KMS and then associate a Service Account with it. or Create a Service Account keypair; export the private key and import that key into KMS.  Once the Serivce Account private key is within KMS, you can do several things:</description>
    </item>
    
    <item>
      <title>GCS SignedURL with Google AppEngine Standard (1st gen)</title>
      <link>https://blog.salrashid.me/posts/gae_signedurl/</link>
      <pubDate>Sun, 22 Dec 2019 14:34:01 -0800</pubDate>
      
      <guid>https://blog.salrashid.me/posts/gae_signedurl/</guid>
      <description>Over the years, I&amp;rsquo;ve repeatedly had to setup samples that use Google AppEngine&amp;rsquo;s (v1) to generate a SignedURL.
The following is nothing new but my variation of it (since i just had to do this again from scratch)
Sample code demonstrating GCS SignedURL using original-flavor Appengine (v1).
Note, if your&amp;rsquo;e reading this and your&amp;rsquo;e using Cloud Run, Cloud Functions or AppEngine v2, its much, much eaiser: just use the google-cloud-storage python library</description>
    </item>
    
  </channel>
</rss>