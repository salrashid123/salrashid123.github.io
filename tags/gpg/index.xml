<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>gpg on blog.salrashid.me</title>
    <link>https://blog.salrashid.me/tags/gpg/</link>
    <description>Recent content in gpg on blog.salrashid.me</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 21 Feb 2020 14:34:01 -0800</lastBuildDate>
    
	<atom:link href="https://blog.salrashid.me/tags/gpg/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>GPG Stream Encryption in golang by chaining Pipes</title>
      <link>https://blog.salrashid.me/posts/gpg_streams/</link>
      <pubDate>Fri, 21 Feb 2020 14:34:01 -0800</pubDate>
      
      <guid>https://blog.salrashid.me/posts/gpg_streams/</guid>
      <description>Sometime last year i wroteup a small article about how to use Cloud Run and Cloud Functions to encrypt data &amp;lsquo;on the fly&amp;rsquo;:
 GPG stream encryption and decryption on Google Cloud Functions and Cloud Run  In that article a source file in a Google Cloud Storage bucket is read in by a Cloud Function/Run, encrypted &amp;ldquo;on the fly&amp;rdquo; and saved in another GCS Bucket. All this happens in a way where the data is encrypted as a stream so as to minimize memory footprint.</description>
    </item>
    
  </channel>
</rss>