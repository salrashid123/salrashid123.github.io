<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Metadata on blog.salrashid.me</title>
    <link>https://blog.salrashid.me/tags/metadata/</link>
    <description>Recent content in Metadata on blog.salrashid.me</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 17 Aug 2016 14:34:01 -0800</lastBuildDate>
    
	<atom:link href="https://blog.salrashid.me/tags/metadata/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>GCE Metadata Server Emulator</title>
      <link>https://blog.salrashid.me/posts/gce_metadata_server/</link>
      <pubDate>Wed, 17 Aug 2016 14:34:01 -0800</pubDate>
      
      <guid>https://blog.salrashid.me/posts/gce_metadata_server/</guid>
      <description>This script acts as a GCE&amp;rsquo;s internal metadata server for local testing/emulation.
It returns a live access_token that can be used directly by Application Default Credentials transparently.
This is useful to test any script or code locally that my need to contact GCE&amp;rsquo;s metadata server for custom, user-defined variables or access_tokens.
Another usecase for this is to verify how Application Defaults will behave while running a local docker container. A local running docker container will not have access to GCE&amp;rsquo;s metadata server but by bridging your container to the emulator, you are basically allowing GCP API access directly from within a container on your local workstation (vs.</description>
    </item>
    
  </channel>
</rss>